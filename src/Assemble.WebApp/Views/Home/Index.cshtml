@{
    Layout = null;
}

<!DOCTYPE html>

<!DOCTYPE html>
<html>
  <head>
      <meta charset="utf-8">
      <title>Avengers: Assemble!</title>
      <style>
       body, html { margin:0; padding: 0; overflow:hidden; font-family:Arial; font-size:20px }
       #cr-stage { border:2px solid black; margin:5px auto; color:white }
      </style>
      @Styles.Render("~/Content/main.css")
  </head>
  <body>
      @Scripts.Render("~/Scripts/crafty.js")
      @Scripts.Render("~/Scripts/source.js")
      @Scripts.Render("~/Scripts/create_mocks_module.js")
      @Scripts.Render("~/Scripts/tiledmapbuilder.js")
      @Scripts.Render("~/Scripts/jquery-2.1.1.min.js")
	<script>
	    window.onload = function () {
	        var WIDTH = 840;
	        var HEIGHT = 840;
	        Crafty.init(WIDTH, HEIGHT);
	        Crafty.scene("Load", function () {

	            Crafty.background("#000");
	            Crafty.e("2D, DOM, Text").attr({ w: WIDTH, h: 20, x: 0, y: HEIGHT / 2 })
  			            .text("Iniciando...")
  			            .css({ "text-align": "center" });

	            //Preload sprites first
	            Crafty.load([
                             "Images/terrain.png",
                             "Images/ogre.png",
                             "Images/1.png",
                             "Images/2.png",
                             "Images/3.png",
                             "Images/4.png",
                             "Images/5.png",
                             "Images/6.png",
	            ], function () {

	                Crafty.sprite(50, 67, "Images/ogre.png", {
	                    Ogre: [0, 0]
	                });

	                SOURCE_FROM_TILED_MAP_EDITOR.layers[0].characters.forEach(function (character) {
	                    if (character.idx != 0) { //se não for o próprio nick
	                        var idx = character.idx;
	                        var indexMap = {};
	                        indexMap[idx] = [0, 0];
	                        Crafty.sprite(50, 67, "Images/" + idx.toString() + ".png", indexMap);
	                    } 
	                });

	                Crafty.scene("Main");
	            });
	        });

	        Crafty.scene("Load");

	        Crafty.scene("Main", function () {

	            Crafty.e("2D, DOM, TiledMapBuilder").setMapDataSource(SOURCE_FROM_TILED_MAP_EDITOR)
				.createWorld(function (tiledmap) {

				});

	            SOURCE_FROM_TILED_MAP_EDITOR.layers[0].characters.forEach(function (character) {
	                if (character.idx != 0) { //se não for o próprio nick
	                    Crafty.e("2D, DOM, " + character.idx)
                          .attr({ x: character.position.j * 19.2 , y: character.position.i * 19, z: 10, isWater: false });
	                }
	            });


	            //Player
	            window.Player = Crafty.e("2D, DOM, Fourway, SpriteAnimation, Sprite, Ogre, Collision")
                     .attr({ x: 19 * 18, y: 23 * 18, z: 10, isWater: false })
                     .animate("walk_left", 0, 1, 3)
                     .animate("walk_right", 0, 2, 3)
                     .animate("walk_up", 0, 3, 3)
                     .animate("walk_down", 0, 0, 3)
                     .fourway(4)
                     .collision(new Crafty.polygon([10, 50], [40, 50], [40, 67], [10, 67]))
                     .bind("NewDirection",
                         function (direction) {
                             if (direction.x < 0) {
                                 if (!this.isPlaying("walk_left"))
                                     this.stop().animate("walk_left", 10, -1);
                             }
                             if (direction.x > 0) {
                                 if (!this.isPlaying("walk_right"))
                                     this.stop().animate("walk_right", 10, -1);
                             }
                             if (direction.y < 0) {
                                 if (!this.isPlaying("walk_up"))
                                     this.stop().animate("walk_up", 10, -1);
                             }
                             if (direction.y > 0) {
                                 if (!this.isPlaying("walk_down"))
                                     this.stop().animate("walk_down", 10, -1);
                             }
                             if (!direction.x && !direction.y) {
                                 this.stop();
                             }
                         });


	           $("#assemble").click(function () {
	               var reqData = {};
	               reqData["terrain"] = SOURCE_FROM_TILED_MAP_EDITOR.layers[0].data;
	               reqData["characters"] = SOURCE_FROM_TILED_MAP_EDITOR.layers[0].characters;
	               $.ajax({
	                   url: "api/path",
	                   type: "post",
	                   contentType: 'application/json',
	                   accepts: 'application/json',
	                   data: JSON.stringify(reqData),
	                   dataType: "json"
	               }).done(function (data) {
	                   var i = 1;
	                   data.steps.forEach(function (movement) {
	                       window.Player.timeout(function () {
	                           this.stop().animate("walk_up", 10, -1);
	                           this.stop().animate("walk_down", 10, -1);
	                           this.stop().animate("walk_left", 10, -1);
	                           this.stop().animate("walk_right", 10, -1);
	                           if (movement == 'n') {
	                               window.Player.animate("walk_up", 10, 5); window.Player.move("n", 20);
	                           }
	                           if (movement == 's') {
	                               window.Player.animate("walk_down", 10, 5); window.Player.move("s", 20);
	                           }
	                           if (movement == 'e') {
	                               window.Player.animate("walk_left", 10, 5); window.Player.move("e", 20);
	                           }
	                           if (movement == 'w') {
	                               window.Player.animate("walk_right", 10, 5); window.Player.move("w", 20);
	                           }
	                       }, 350 * i);
	                       i++;
	                   });

                       var pps = []
	                   data.visited.forEach(function (pp) {
	                      pps.push(pp + ", ");
	                   });
	                   $("#party-components").html(pps)
	                   $("#cost-components").html(data.cost);

	               });
	           });
	        });
	    }
	</script>
      <div id="assemble" class="big-btn">
          <img src="~/Images/assemble.png"></img>
      </div>
      <div id="result" class="result-panel">  
          <span id="party" class="result-party"><h3>Visitados:&nbsp;</h3><span id="party-components"></span> </span>
          </ br>
          <span id="cost" class="result-cost"><h3>Custo:&nbsp;</h3><span id="cost-components"></span> </span>    
      </div>
  </body>
</html>

